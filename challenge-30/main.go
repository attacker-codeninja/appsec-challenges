package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"log"
	"net/http"

	"github.com/SebastiaanKlippert/go-wkhtmltopdf"
)

type Req struct {
	Content string `json:"content"`
}

func renderHandler(w http.ResponseWriter, r *http.Request) {
	var req Req
	if err := json.NewDecoder(r.Body).Decode(&req); err != nil {
		http.Error(w, "Invalid JSON", 400)
		return
	}

	html := fmt.Sprintf(`
	<html><body>
	  <h1>Company Report</h1><hr/>
	  %s
	  <hr/><footer>Generated by Challenge 30 - PDF API</footer>
	</body></html>`, req.Content)

	pdfg, _ := wkhtmltopdf.NewPDFGenerator()
	pdfg.AddPage(wkhtmltopdf.NewPageReader(bytes.NewReader([]byte(html))))
	if err := pdfg.Create(); err != nil {
		http.Error(w, "PDF gen failed", 500)
		return
	}

	w.Header().Set("Content-Type", "application/pdf")
	w.Write(pdfg.Bytes())
}

func main() {
	http.HandleFunc("/render", renderHandler)
	fmt.Println("Listening on http://localhost:5000")
	log.Fatal(http.ListenAndServe(":5000", nil))
}
